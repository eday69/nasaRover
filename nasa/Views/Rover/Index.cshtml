@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@functions {
    public RoverMachine[] getRoversInXY(int x, int y)
    {
        RoverMachine[] _rover;

        _rover = Model.Where(rov => (rov.XPos == x && rov.YPos == y)).ToArray();
        return _rover;
    }

    public string getIcon(char heading)
    {
        string direction = "left";
        if (heading == 'N') direction = "up";
        if (heading == 'S') direction = "down";
        if (heading == 'E') direction = "right";

        return "fas fa-caret-" + direction;
    }

    string[] colors = new string[] {
        "colRed",
        "colBlue",
        "colGreen",
        "colYellow",
        "colPurple",
        "colBlack",
        "colGray"
    };

    public string getColor(int idx)
    {
        return colors[idx];
    }

}
@{
    ViewData["Title"] = "RoverControl";
}
@model RoverMachine[]

<div class="controlImageBackground">
</div>

<div class="grid-container">
    <h1 class="title">Nasa Rover Control Center</h1>
    <a class="btn btn-primary open-newRover" data-toggle="modal" href="#newRover">
        DEPLOY ROVER
    </a>
</div>

<div>
    <div class="d-flex justify-content-center align-items-center">
        <table>
            <tr>
                <td class="gridcol">&nbsp;</td>
                @for (int i = 0; i < (int)ViewData["GridSize"]; i++)
                {
                    <td class="gridcol">
                        <div class="gridHeaders">@i</div>
                    </td>
                }
                <td class="gridcol">&nbsp;</td>
            </tr>
            @for (int i = 0; i < (int)ViewData["GridSize"]; i++)
            {
                <tr>
                    <td class="gridcol">
                        <div class="gridHeaders">
                            @((int)ViewData["GridSize"] - i - 1)
                        </div>
                    </td>
                    @for (int j = 0; j < (int)ViewData["GridSize"]; j++)
                    {
                        <td class="gridcol">
                            <div class="rover">
                                @foreach (var roverdeployed in @getRoversInXY(j, (int)ViewData["GridSize"] - i - 1))
                                {
                                    <a class="open-controlRover"
                                       data-toggle="modal"
                                       data-id="@roverdeployed.Id"
                                       data-xpos="@roverdeployed.XPos"
                                       data-ypos="@roverdeployed.YPos"
                                       data-heading="@roverdeployed.Heading"
                                       href="#controlRover">
                                        <i class="@getColor(roverdeployed.Id) @getIcon(@roverdeployed.Heading)"></i>
                                    </a>
                                }
                            </div>
                        </td>
                    }
                    <td class="gridcol">
                        <div class="gridHeaders">
                            @((int)ViewData["GridSize"] - i - 1)
                        </div>
                    </td>
                </tr>
            }
            <tr>
                <td class="gridcol">&nbsp;</td>
                @for (int i = 0; i < (int)ViewData["GridSize"]; i++)
                {
                    <td class="gridcol">
                        <div class="gridHeaders">@i</div>
                    </td>
                }
                <td class="gridcol">&nbsp;</td>
            </tr>

        </table>
    </div>
    <div class="d-flex justify-content-center">
        <button type="button" class="btn btn-danger bottom-button" onclick="location.href='@Url.Action("", "Rover")'">REFRESH</button>
    </div>
</div>

<div class="modal fade" id="controlRover" tabindex="-1" role="dialog" aria-labelledby="roverModal" aria-hidden="true">
    <div class="modal-dialog modal-sm controlRover" role="document">
        <div class="modal-content">
            <div class="modal-body control">
                <div class="border border-white rounded-top">
                    <p class="h3 pl-1">ROVER</p>
                    <p class="text-center">ID # <span id="roverId"></span></p>
                </div>
                <div class="border border-white">
                    <p class="h4 pl-1">POSITION</p>
                    <p class="text-center">x : <span id="roverXpos"></span></p>
                    <p class="text-center">y : <span id="roverYpos"></span></p>
                    <p class="text-center"><span id="roverHeading"></span></p>
                </div>
                <div class="border border-white rounded-bottom">
                    <p class="h4 pl-1">MOVE</p>
                    <div class="directions">
                        <a class="addMovement" data-direction="L" href="#controlRover" onclick="">
                            <i class="far fa-arrow-alt-circle-left"></i>
                        </a>
                        <a class="addMovement" data-direction="M" href="#controlRover" onclick="">
                            <i class="far fa-arrow-alt-circle-up"></i>
                        </a>
                        <a class="addMovement" data-direction="R" href="#controlRover" onclick="">
                            <i class="far fa-arrow-alt-circle-right"></i>
                        </a>
                    </div>
                    <div class="directions">
                        <p class="directions_caption">Left</p>
                        <p class="directions_caption">Move</p>
                        <p class="directions_caption">Right</p>
                    </div>
                    <div class="text-center mt-2">
                        <input id="roverMovements" disabled value="" />
                    </div>
                    <div class="text-center mt-2 mb-2">
                        <button type="button" class="btn btn-success" id="sendMovements">
                            SEND
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="newRover" tabindex="-1" role="dialog" aria-labelledby="newRoverModal" aria-hidden="true">
    <div class="modal-dialog modal-sm newRover" role="document">
        <div class="modal-content">
            <div class="modal-body control">
                <div class="border border-white rounded-top">
                    <p class="h3 pl-1">LAUNCH ROVER</p>
                </div>
                <div class="border border-white">
                    <p class="h4 pl-1">DESTINATION</p>
                    <p class="text-center">x : <input type="number" id="newRoverX" min="0" max="99"></p>
                    <p class="text-center">y : <input type="number" id="newRoverY" min="0" max="99"></p>
                    <p class="text-center">Heading:
                        <select id="newRoverHeading">
                            <option value="N">North</option>
                            <option value="S">South</option>
                            <option value="E">East</option>
                            <option value="W">West</option>
                        </select>
                    </p>
                </div>
                <div class="border border-white rounded-bottom">
                    <div class="text-center mt-2 mb-2">
                        <button type="button" class="btn btn-success" id="launchRover">
                            DEPLOY
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>